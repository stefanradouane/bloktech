console.log("hoi");const clientId="97827c6f27404e7a8ce75a072081a151",clientSecret="9d4531501fd94595a45632324e3387b5";async function getCategory(){const e=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+btoa(clientId+":"+clientSecret)},body:"grant_type=client_credentials"}),t=(await e.json()).access_token,n=await fetch("https://api.spotify.com/v1/browse/categories?country=NL",{method:"GET",headers:{Authorization:"Bearer "+t}}),o=(await n.json()).categories.items;let i="";o.forEach((e=>{let t=`<div class="container">\n                                    <label for="${e.id}">\n                                        <p>${e.name}</p>\n                                        <img src="${e.icons[0].url}"/>\n                                    </label>\n                                    <input type="checkbox" name="categorie" value="${e.id}" id="${e.name}">\n                                </div>`;i+=t;}));i+="<button>Verstuur</button>",document.querySelector("form.categorie").innerHTML=i;}const maincat=document.querySelector("main.start");maincat&&getCategory();const mainLijst=document.querySelector("main.muziekLijst");if(mainLijst){let e=[],t=[];async function getTracks(){const n=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+btoa(clientId+":"+clientSecret)},body:"grant_type=client_credentials"}),o=(await n.json()).access_token;console.log(o);let i=document.querySelectorAll("li.categorie");const c=[];i.forEach((e=>{const t=e.innerText;c.push(async function(e){const t=await fetch(`https://api.spotify.com/v1/browse/categories/${e}/playlists?limit=1`,{method:"GET",headers:{Authorization:"Bearer "+o}});return await t.json();}(t));})),Promise.all(c).then((n=>{n.forEach((t=>{if(null!=t.playlists){t.playlists.items.forEach((t=>{const n=t.tracks.href;e.push(async function(e){const t=await fetch(`${e}`,{method:"GET",headers:{Authorization:"Bearer "+o}}),n=await t.json();return n.items;}(n));}));}})),Promise.all(e).then((e=>{e.forEach((e=>{e.forEach((e=>{const n=e.track;t.push(n);}));})),t!=[]&&function(){let e=document.querySelectorAll("li.like"),n=document.querySelectorAll("li.dislike");console.log(e),console.log(n);const o=t[0].id;let i=[];e.forEach((e=>{const t=e.innerText;i.push(t);})),n.forEach((e=>{const t=e.innerText;i.push(t);})),console.log(i);const c=new Set(i),s=Array.from(c);function a(e){const t=e[0].id,n=s.includes(t);if(1==n){const t=e[0];a(e=e.filter((function(e){return e!=t;})));}else 0==n&&r(e);}function r(e){console.log(e[0]);const t=e[0],n=t.preview_url;let o="";o+=`<section class="figure">\n                                                <section>\n                                                    <section>\n                                                        <h2>${t.name}</h2>\n                                                        <h3>${t.artists[0].name}</h3>\n                                                        <form action="/ontdek" method="post">\n                                                            <input type="hidden" name="trackId" value="${t.id}">\n                                                            <input type="submit" name="like" value="like">\n                                                            <input type="submit" name="dislike" value="dislike">\n                                                        </form>\n                                                    </section>\n                                                    <section>\n                                                        <img src="${t.album.images[0].url}" alt="">\n                                                    </section>\n                                                </section>\n                                                <section>`,o+=null==n?"<h3>Geen preview beschikbaar</h3>\n                                            </section>\n                                            </section>":`<audio controls>\n                                                        <source src="${n}" type="audio/ogg">\n                                                    </audio>\n                                                </section>\n                                            </section>`,mainLijst.innerHTML=o;}console.log(s),function(){const e=s.includes(o);if(1==e){console.log("match");const e=t[0];t=t.filter((function(t){return t!=e;})),a(t);}else 0==e&&r(t);}();}();}));}));}getTracks();}const mainLikes=document.querySelector("main.likes");let likes=[];if(mainLikes){const n=document.querySelectorAll("li.likeId");async function getLikeList(){const e=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+btoa(clientId+":"+clientSecret)},body:"grant_type=client_credentials"}),t=(await e.json()).access_token;n.forEach((e=>{const n=e.innerText;console.log(n),likes.push(async function(e){const n=await fetch(`https://api.spotify.com/v1/tracks/${e}`,{method:"GET",headers:{Authorization:"Bearer "+t}});return await n.json();}(n));}));let o="";const i=document.querySelector("section.likes");Promise.all(likes).then((e=>{e.forEach((e=>{console.log(e);const t=e.preview_url;let n=`<section class="likeSection">\n                                        <section>\n                                            <section>\n                                                <h2>${e.name}</h2>\n                                                <h3>${e.artists[0].name}</h3>\n                                                <form action="/likes" method="post">\n                                                    <input type="hidden" name="trackId" value="${e.id}">\n                                                    <input type="submit" name="delete" value="delete">\n                                                </form>\n                                            </section>\n                                            <section>\n                                                <img src="${e.album.images[0].url}" alt="">\n                                            </section>\n                                        </section>\n                                        <section>`;if(o+=n,null==t){o+="<h3>Geen preview beschikbaar</h3>\n                                    </section>\n                                </section>";}else{let t=`<audio controls>\n                                                <source src="${e.preview_url}" type="audio/ogg">\n                                            </audio>\n                                        </section>\n                                    </section>`;o+=t;}i.innerHTML=o;}));}));}getLikeList();}
//# sourceMappingURL=all.js.map
